// Copyright (c) coherence ApS.
// For all coherence generated code, the coherence SDK license terms apply. See the license file in the coherence Package root folder for more information.

// <auto-generated>
// Generated file. DO NOT EDIT!
// </auto-generated>
namespace Coherence.Generated
{
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using UnityEngine;
    using Coherence.Toolkit;
    using Coherence.Toolkit.Bindings;
    using Coherence.Entities;
    using Coherence.ProtocolDef;
    using Coherence.Brook;
    using Coherence.Toolkit.Bindings.ValueBindings;
    using Coherence.Toolkit.Bindings.TransformBindings;
    using Coherence.Connection;
    using Coherence.SimulationFrame;
    using Coherence.Interpolation;
    using Coherence.Log;
    using Logger = Coherence.Log.Logger;
    using UnityEngine.Scripting;
    [UnityEngine.Scripting.Preserve]
    public class Binding_89bb435d615753b4f86caa89fd2a5d9d_0d09d827e9dc48d48234312ff3610eb4 : PositionBinding
    {   
        private global::UnityEngine.Transform CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Transform)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(WorldPosition);
        public override string CoherenceComponentName => "WorldPosition";
        public override uint FieldMask => 0b00000000000000000000000000000001;

        public override UnityEngine.Vector3 Value
        {
            get { return (UnityEngine.Vector3)(coherenceSync.coherencePosition); }
            set { coherenceSync.coherencePosition = (UnityEngine.Vector3)(value); }
        }

        protected override (UnityEngine.Vector3 value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((WorldPosition)coherenceComponent).value;
            if (!coherenceSync.HasParentWithCoherenceSync) { value += floatingOriginDelta; }

            var simFrame = ((WorldPosition)coherenceComponent).valueSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (WorldPosition)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.value = Value;
            }
            else
            {
                update.value = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.valueSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new WorldPosition();
        }    
    }
    [UnityEngine.Scripting.Preserve]
    public class Binding_89bb435d615753b4f86caa89fd2a5d9d_ea22c661324048629b36fc289800b247 : RotationBinding
    {   
        private global::UnityEngine.Transform CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Transform)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(WorldOrientation);
        public override string CoherenceComponentName => "WorldOrientation";
        public override uint FieldMask => 0b00000000000000000000000000000001;

        public override UnityEngine.Quaternion Value
        {
            get { return (UnityEngine.Quaternion)(coherenceSync.coherenceRotation); }
            set { coherenceSync.coherenceRotation = (UnityEngine.Quaternion)(value); }
        }

        protected override (UnityEngine.Quaternion value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((WorldOrientation)coherenceComponent).value;

            var simFrame = ((WorldOrientation)coherenceComponent).valueSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (WorldOrientation)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.value = Value;
            }
            else
            {
                update.value = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.valueSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new WorldOrientation();
        }    
    }
    [UnityEngine.Scripting.Preserve]
    public class Binding_89bb435d615753b4f86caa89fd2a5d9d_abd6ea830b7b416c8a6dd35eb11f2a4f : ScaleBinding
    {   
        private global::UnityEngine.Transform CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Transform)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(GenericScale);
        public override string CoherenceComponentName => "GenericScale";
        public override uint FieldMask => 0b00000000000000000000000000000001;

        public override UnityEngine.Vector3 Value
        {
            get { return (UnityEngine.Vector3)(coherenceSync.coherenceLocalScale); }
            set { coherenceSync.coherenceLocalScale = (UnityEngine.Vector3)(value); }
        }

        protected override (UnityEngine.Vector3 value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((GenericScale)coherenceComponent).value;

            var simFrame = ((GenericScale)coherenceComponent).valueSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (GenericScale)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.value = Value;
            }
            else
            {
                update.value = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.valueSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new GenericScale();
        }    
    }
    [UnityEngine.Scripting.Preserve]
    public class Binding_89bb435d615753b4f86caa89fd2a5d9d_59b52bcb476d404a94c7b0a30cfbaf19 : StringBinding
    {   
        private global::Coherence.Toolkit.CoherenceNode CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::Coherence.Toolkit.CoherenceNode)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_89bb435d615753b4f86caa89fd2a5d9d_4071990166734286761);
        public override string CoherenceComponentName => "_89bb435d615753b4f86caa89fd2a5d9d_4071990166734286761";
        public override uint FieldMask => 0b00000000000000000000000000000001;

        public override System.String Value
        {
            get { return (System.String)(CastedUnityComponent.path); }
            set { CastedUnityComponent.path = (System.String)(value); }
        }

        protected override (System.String value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_89bb435d615753b4f86caa89fd2a5d9d_4071990166734286761)coherenceComponent).path;

            var simFrame = ((_89bb435d615753b4f86caa89fd2a5d9d_4071990166734286761)coherenceComponent).pathSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_89bb435d615753b4f86caa89fd2a5d9d_4071990166734286761)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.path = Value;
            }
            else
            {
                update.path = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.pathSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _89bb435d615753b4f86caa89fd2a5d9d_4071990166734286761();
        }    
    }
    [UnityEngine.Scripting.Preserve]
    public class Binding_89bb435d615753b4f86caa89fd2a5d9d_cc845b8866124cb082e0181af5e7f681 : IntBinding
    {   
        private global::Coherence.Toolkit.CoherenceNode CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::Coherence.Toolkit.CoherenceNode)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_89bb435d615753b4f86caa89fd2a5d9d_4071990166734286761);
        public override string CoherenceComponentName => "_89bb435d615753b4f86caa89fd2a5d9d_4071990166734286761";
        public override uint FieldMask => 0b00000000000000000000000000000010;

        public override System.Int32 Value
        {
            get { return (System.Int32)(CastedUnityComponent.pathDirtyCounter); }
            set { CastedUnityComponent.pathDirtyCounter = (System.Int32)(value); }
        }

        protected override (System.Int32 value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_89bb435d615753b4f86caa89fd2a5d9d_4071990166734286761)coherenceComponent).pathDirtyCounter;

            var simFrame = ((_89bb435d615753b4f86caa89fd2a5d9d_4071990166734286761)coherenceComponent).pathDirtyCounterSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_89bb435d615753b4f86caa89fd2a5d9d_4071990166734286761)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.pathDirtyCounter = Value;
            }
            else
            {
                update.pathDirtyCounter = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.pathDirtyCounterSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _89bb435d615753b4f86caa89fd2a5d9d_4071990166734286761();
        }    
    }
    [UnityEngine.Scripting.Preserve]
    public class Binding_89bb435d615753b4f86caa89fd2a5d9d_2ef575fde1d84535b83a10a14e8b6cd0 : BoolBinding
    {   
        private global::Grabbable CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::Grabbable)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_89bb435d615753b4f86caa89fd2a5d9d_4607038716989399198);
        public override string CoherenceComponentName => "_89bb435d615753b4f86caa89fd2a5d9d_4607038716989399198";
        public override uint FieldMask => 0b00000000000000000000000000000001;

        public override System.Boolean Value
        {
            get { return (System.Boolean)(CastedUnityComponent.isBeingCarried); }
            set { CastedUnityComponent.isBeingCarried = (System.Boolean)(value); }
        }

        protected override (System.Boolean value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_89bb435d615753b4f86caa89fd2a5d9d_4607038716989399198)coherenceComponent).isBeingCarried;

            var simFrame = ((_89bb435d615753b4f86caa89fd2a5d9d_4607038716989399198)coherenceComponent).isBeingCarriedSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_89bb435d615753b4f86caa89fd2a5d9d_4607038716989399198)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.isBeingCarried = Value;
            }
            else
            {
                update.isBeingCarried = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.isBeingCarriedSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _89bb435d615753b4f86caa89fd2a5d9d_4607038716989399198();
        }    
    }
    [UnityEngine.Scripting.Preserve]
    public class Binding_89bb435d615753b4f86caa89fd2a5d9d_f2d1c22c30b044c8bb3dddc445e2c67a : ReferenceBinding
    {   
        private global::PositionedObject CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::PositionedObject)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_89bb435d615753b4f86caa89fd2a5d9d_7643438469673120224);
        public override string CoherenceComponentName => "_89bb435d615753b4f86caa89fd2a5d9d_7643438469673120224";
        public override uint FieldMask => 0b00000000000000000000000000000001;

        public override Entity Value
        {
            get { return coherenceSync.CoherenceBridge.UnityObjectToEntityId(CastedUnityComponent.objectAnchorSync); }
            set { CastedUnityComponent.objectAnchorSync = coherenceSync.CoherenceBridge.EntityIdToCoherenceSync(value); }
        }

        protected override (Entity value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_89bb435d615753b4f86caa89fd2a5d9d_7643438469673120224)coherenceComponent).objectAnchorSync;

            var simFrame = ((_89bb435d615753b4f86caa89fd2a5d9d_7643438469673120224)coherenceComponent).objectAnchorSyncSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_89bb435d615753b4f86caa89fd2a5d9d_7643438469673120224)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.objectAnchorSync = Value;
            }
            else
            {
                update.objectAnchorSync = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.objectAnchorSyncSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _89bb435d615753b4f86caa89fd2a5d9d_7643438469673120224();
        }    
    }

    [UnityEngine.Scripting.Preserve]
    public class CoherenceSync_89bb435d615753b4f86caa89fd2a5d9d : CoherenceSyncBaked
    {
        private Entity entityId;
        private Logger logger = Coherence.Log.Log.GetLogger<CoherenceSync_89bb435d615753b4f86caa89fd2a5d9d>();
        
        private global::PositionedObject _89bb435d615753b4f86caa89fd2a5d9d_ad9e635638034d88b0c6dcd8a9c83286_CommandTarget;
        
        
        private IClient client;
        private CoherenceBridge bridge;
        
        private readonly Dictionary<string, Binding> bakedValueBindings = new Dictionary<string, Binding>()
        {
			["0d09d827e9dc48d48234312ff3610eb4"] = new Binding_89bb435d615753b4f86caa89fd2a5d9d_0d09d827e9dc48d48234312ff3610eb4(),
			["ea22c661324048629b36fc289800b247"] = new Binding_89bb435d615753b4f86caa89fd2a5d9d_ea22c661324048629b36fc289800b247(),
			["abd6ea830b7b416c8a6dd35eb11f2a4f"] = new Binding_89bb435d615753b4f86caa89fd2a5d9d_abd6ea830b7b416c8a6dd35eb11f2a4f(),
			["59b52bcb476d404a94c7b0a30cfbaf19"] = new Binding_89bb435d615753b4f86caa89fd2a5d9d_59b52bcb476d404a94c7b0a30cfbaf19(),
			["cc845b8866124cb082e0181af5e7f681"] = new Binding_89bb435d615753b4f86caa89fd2a5d9d_cc845b8866124cb082e0181af5e7f681(),
			["2ef575fde1d84535b83a10a14e8b6cd0"] = new Binding_89bb435d615753b4f86caa89fd2a5d9d_2ef575fde1d84535b83a10a14e8b6cd0(),
			["f2d1c22c30b044c8bb3dddc445e2c67a"] = new Binding_89bb435d615753b4f86caa89fd2a5d9d_f2d1c22c30b044c8bb3dddc445e2c67a(),
        };
        
        private Dictionary<string, Action<CommandBinding, CommandsHandler>> bakedCommandBindings = new Dictionary<string, Action<CommandBinding, CommandsHandler>>();
        
        public CoherenceSync_89bb435d615753b4f86caa89fd2a5d9d()
        {
            bakedCommandBindings.Add("ad9e635638034d88b0c6dcd8a9c83286", BakeCommandBinding__89bb435d615753b4f86caa89fd2a5d9d_ad9e635638034d88b0c6dcd8a9c83286);
        }
        
        public override Binding BakeValueBinding(Binding valueBinding)
        {
            if (bakedValueBindings.TryGetValue(valueBinding.guid, out var bakedBinding))
            {
                valueBinding.CloneTo(bakedBinding);
                return bakedBinding;
            }
            
            return null;
        }
        
        public override void BakeCommandBinding(CommandBinding commandBinding, CommandsHandler commandsHandler)
        {
            if (bakedCommandBindings.TryGetValue(commandBinding.guid, out var commandBindingBaker))
            {
                commandBindingBaker.Invoke(commandBinding, commandsHandler);
            }
        }
        private void BakeCommandBinding__89bb435d615753b4f86caa89fd2a5d9d_ad9e635638034d88b0c6dcd8a9c83286(CommandBinding commandBinding, CommandsHandler commandsHandler)
        {
            _89bb435d615753b4f86caa89fd2a5d9d_ad9e635638034d88b0c6dcd8a9c83286_CommandTarget = (global::PositionedObject)commandBinding.UnityComponent;
            commandsHandler.AddBakedCommand("PositionedObject.PlayReappearShaderEffect", "()", SendCommand__89bb435d615753b4f86caa89fd2a5d9d_ad9e635638034d88b0c6dcd8a9c83286, ReceiveLocalCommand__89bb435d615753b4f86caa89fd2a5d9d_ad9e635638034d88b0c6dcd8a9c83286, MessageTarget.All, _89bb435d615753b4f86caa89fd2a5d9d_ad9e635638034d88b0c6dcd8a9c83286_CommandTarget, false);
        }
        
        private void SendCommand__89bb435d615753b4f86caa89fd2a5d9d_ad9e635638034d88b0c6dcd8a9c83286(MessageTarget target, ChannelID channelID, object[] args)
        {
            var command = new _89bb435d615753b4f86caa89fd2a5d9d_ad9e635638034d88b0c6dcd8a9c83286();
            
        
            client.SendCommand(command, target, entityId, channelID);
        }
        
        private void ReceiveLocalCommand__89bb435d615753b4f86caa89fd2a5d9d_ad9e635638034d88b0c6dcd8a9c83286(MessageTarget target, ChannelID _, object[] args)
        {
            var command = new _89bb435d615753b4f86caa89fd2a5d9d_ad9e635638034d88b0c6dcd8a9c83286();
            
            
            ReceiveCommand__89bb435d615753b4f86caa89fd2a5d9d_ad9e635638034d88b0c6dcd8a9c83286(command);
        }

        private void ReceiveCommand__89bb435d615753b4f86caa89fd2a5d9d_ad9e635638034d88b0c6dcd8a9c83286(_89bb435d615753b4f86caa89fd2a5d9d_ad9e635638034d88b0c6dcd8a9c83286 command)
        {
            var target = _89bb435d615753b4f86caa89fd2a5d9d_ad9e635638034d88b0c6dcd8a9c83286_CommandTarget;
            
            target.PlayReappearShaderEffect();
        }
        
        public override void ReceiveCommand(IEntityCommand command)
        {
            switch (command)
            {
                case _89bb435d615753b4f86caa89fd2a5d9d_ad9e635638034d88b0c6dcd8a9c83286 castedCommand:
                    ReceiveCommand__89bb435d615753b4f86caa89fd2a5d9d_ad9e635638034d88b0c6dcd8a9c83286(castedCommand);
                    break;
                default:
                    logger.Warning(Coherence.Log.Warning.ToolkitBakedSyncReceiveCommandUnhandled,
                        $"CoherenceSync_89bb435d615753b4f86caa89fd2a5d9d Unhandled command: {command.GetType()}.");
                    break;
            }
        }
        
        public override void CreateEntity(bool usesLodsAtRuntime, string archetypeName, AbsoluteSimulationFrame simFrame, List<ICoherenceComponentData> components)
        {

            if (!usesLodsAtRuntime)
            {
                return;
            }
            
            if (Archetypes.IndexForName.TryGetValue(archetypeName, out int archetypeIndex))
            {
                components.Add(new ArchetypeComponent
                    {
                        index = archetypeIndex,
                        indexSimulationFrame = simFrame,
                        FieldsMask = 0b1
                    }
                );

                return;                
            }
    
            logger.Warning(Coherence.Log.Warning.ToolkitBakedSyncCreateEntityMissingArchetype,
                $"Unable to find archetype {archetypeName} in dictionary. Please, bake manually (coherence > Bake)");
        }
        
        public override void Dispose()
        {
        }
        
        public override void Initialize(Entity entityId, CoherenceBridge bridge, IClient client, CoherenceInput input, Logger logger)
        {
            this.logger = logger.With<CoherenceSync_89bb435d615753b4f86caa89fd2a5d9d>();
            this.bridge = bridge;
            this.entityId = entityId;
            this.client = client;        
        }
    }
}
