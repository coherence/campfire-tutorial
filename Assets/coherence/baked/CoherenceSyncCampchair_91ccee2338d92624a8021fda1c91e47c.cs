// Copyright (c) coherence ApS.
// For all coherence generated code, the coherence SDK license terms apply. See the license file in the coherence Package root folder for more information.

// <auto-generated>
// Generated file. DO NOT EDIT!
// </auto-generated>
namespace Coherence.Generated
{
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using UnityEngine;
    using Coherence.Toolkit;
    using Coherence.Toolkit.Bindings;
    using Coherence.Entities;
    using Coherence.ProtocolDef;
    using Coherence.Brook;
    using Coherence.Toolkit.Bindings.ValueBindings;
    using Coherence.Toolkit.Bindings.TransformBindings;
    using Coherence.Connection;
    using Coherence.Log;
    using Logger = Coherence.Log.Logger;
    using UnityEngine.Scripting;
    
    public class Binding_91ccee2338d92624a8021fda1c91e47c_af57f962_994c_4ec7_887c_2f2f6b67f68a : PositionBinding
    {   
        private global::UnityEngine.Transform CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Transform)UnityComponent;
        }

        public override string CoherenceComponentName => "WorldPosition";
        public override uint FieldMask => 0b00000000000000000000000000000001;

        public override UnityEngine.Vector3 Value
        {
            get { return (UnityEngine.Vector3)(coherenceSync.coherencePosition); }
            set { coherenceSync.coherencePosition = (UnityEngine.Vector3)(value); }
        }

        protected override UnityEngine.Vector3 ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((WorldPosition)coherenceComponent).value;
            if (!coherenceSync.HasParentWithCoherenceSync) { value += floatingOriginDelta; }
            
            return value;
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, double time)
        {
            var update = (WorldPosition)coherenceComponent;
            if (RuntimeInterpolationSettings.IsInterpolationNone)
            {
                update.value = Value;
            }
            else
            {
                update.value = GetInterpolatedAt(time);
            }
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new WorldPosition();
        }    
    }
    
    public class Binding_91ccee2338d92624a8021fda1c91e47c_6653d280_b186_4071_bb38_15f49a73d029 : BoolBinding
    {   
        private global::Chair CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::Chair)UnityComponent;
        }

        public override string CoherenceComponentName => "Campchair_91ccee2338d92624a8021fda1c91e47c_Chair_4713251173614319484";
        public override uint FieldMask => 0b00000000000000000000000000000001;

        public override System.Boolean Value
        {
            get { return (System.Boolean)(CastedUnityComponent.isBusy); }
            set { CastedUnityComponent.isBusy = (System.Boolean)(value); }
        }

        protected override System.Boolean ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((Campchair_91ccee2338d92624a8021fda1c91e47c_Chair_4713251173614319484)coherenceComponent).isBusy;
            
            return value;
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, double time)
        {
            var update = (Campchair_91ccee2338d92624a8021fda1c91e47c_Chair_4713251173614319484)coherenceComponent;
            if (RuntimeInterpolationSettings.IsInterpolationNone)
            {
                update.isBusy = Value;
            }
            else
            {
                update.isBusy = GetInterpolatedAt(time);
            }
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new Campchair_91ccee2338d92624a8021fda1c91e47c_Chair_4713251173614319484();
        }    
    }
    
    public class Binding_91ccee2338d92624a8021fda1c91e47c_85ff4db8_c33a_45df_ab71_39834053c3e6 : BoolBinding
    {   
        private global::UnityEngine.CapsuleCollider CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.CapsuleCollider)UnityComponent;
        }

        public override string CoherenceComponentName => "Campchair_91ccee2338d92624a8021fda1c91e47c_CapsuleCollider_1987083777327440787";
        public override uint FieldMask => 0b00000000000000000000000000000001;

        public override System.Boolean Value
        {
            get { return (System.Boolean)(CastedUnityComponent.enabled); }
            set { CastedUnityComponent.enabled = (System.Boolean)(value); }
        }

        protected override System.Boolean ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((Campchair_91ccee2338d92624a8021fda1c91e47c_CapsuleCollider_1987083777327440787)coherenceComponent).enabled;
            
            return value;
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, double time)
        {
            var update = (Campchair_91ccee2338d92624a8021fda1c91e47c_CapsuleCollider_1987083777327440787)coherenceComponent;
            if (RuntimeInterpolationSettings.IsInterpolationNone)
            {
                update.enabled = Value;
            }
            else
            {
                update.enabled = GetInterpolatedAt(time);
            }
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new Campchair_91ccee2338d92624a8021fda1c91e47c_CapsuleCollider_1987083777327440787();
        }    
    }

    public class CoherenceSyncCampchair_91ccee2338d92624a8021fda1c91e47c : CoherenceSyncBaked
    {
        private Entity entityId;
        private Logger logger = Coherence.Log.Log.GetLogger<CoherenceSyncCampchair_91ccee2338d92624a8021fda1c91e47c>();
        
        private global::Chair Campchair_91ccee2338d92624a8021fda1c91e47c_91ccee2338d92624a8021fda1c91e47c_da4067b1_fcd3_4e8a_93ae_914a3b0df2f9_CommandTarget;
        
        
        private IClient client;
        private CoherenceBridge bridge;
        
        private readonly Dictionary<string, Binding> bakedValueBindings = new Dictionary<string, Binding>()
        {
            ["af57f962-994c-4ec7-887c-2f2f6b67f68a"] = new Binding_91ccee2338d92624a8021fda1c91e47c_af57f962_994c_4ec7_887c_2f2f6b67f68a(),
            ["6653d280-b186-4071-bb38-15f49a73d029"] = new Binding_91ccee2338d92624a8021fda1c91e47c_6653d280_b186_4071_bb38_15f49a73d029(),
            ["85ff4db8-c33a-45df-ab71-39834053c3e6"] = new Binding_91ccee2338d92624a8021fda1c91e47c_85ff4db8_c33a_45df_ab71_39834053c3e6(),
        };
        
        private Dictionary<string, Action<CommandBinding, CommandsHandler>> bakedCommandBindings = new Dictionary<string, Action<CommandBinding, CommandsHandler>>();
        
        public CoherenceSyncCampchair_91ccee2338d92624a8021fda1c91e47c()
        {
            bakedCommandBindings.Add("da4067b1-fcd3-4e8a-93ae-914a3b0df2f9", BakeCommandBinding_Campchair_91ccee2338d92624a8021fda1c91e47c_91ccee2338d92624a8021fda1c91e47c_da4067b1_fcd3_4e8a_93ae_914a3b0df2f9);
        }
        
        public override Binding BakeValueBinding(Binding valueBinding)
        {
            if (bakedValueBindings.TryGetValue(valueBinding.guid, out var bakedBinding))
            {
                valueBinding.CloneTo(bakedBinding);
                return bakedBinding;
            }
            
            return null;
        }
        
        public override void BakeCommandBinding(CommandBinding commandBinding, CommandsHandler commandsHandler)
        {
            if (bakedCommandBindings.TryGetValue(commandBinding.guid, out var commandBindingBaker))
            {
                commandBindingBaker.Invoke(commandBinding, commandsHandler);
            }
        }
    
        private void BakeCommandBinding_Campchair_91ccee2338d92624a8021fda1c91e47c_91ccee2338d92624a8021fda1c91e47c_da4067b1_fcd3_4e8a_93ae_914a3b0df2f9(CommandBinding commandBinding, CommandsHandler commandsHandler)
        {
            Campchair_91ccee2338d92624a8021fda1c91e47c_91ccee2338d92624a8021fda1c91e47c_da4067b1_fcd3_4e8a_93ae_914a3b0df2f9_CommandTarget = (global::Chair)commandBinding.UnityComponent;
            commandsHandler.AddBakedCommand("Chair.ChangeState", "(System.Boolean)", SendCommand_Campchair_91ccee2338d92624a8021fda1c91e47c_91ccee2338d92624a8021fda1c91e47c_da4067b1_fcd3_4e8a_93ae_914a3b0df2f9, ReceiveLocalCommand_Campchair_91ccee2338d92624a8021fda1c91e47c_91ccee2338d92624a8021fda1c91e47c_da4067b1_fcd3_4e8a_93ae_914a3b0df2f9, MessageTarget.AuthorityOnly, Campchair_91ccee2338d92624a8021fda1c91e47c_91ccee2338d92624a8021fda1c91e47c_da4067b1_fcd3_4e8a_93ae_914a3b0df2f9_CommandTarget, false);
        }
        
        private void SendCommand_Campchair_91ccee2338d92624a8021fda1c91e47c_91ccee2338d92624a8021fda1c91e47c_da4067b1_fcd3_4e8a_93ae_914a3b0df2f9(MessageTarget target, object[] args)
        {
            var command = new Campchair_91ccee2338d92624a8021fda1c91e47c_91ccee2338d92624a8021fda1c91e47c_da4067b1_fcd3_4e8a_93ae_914a3b0df2f9();
            
            int i = 0;
            command.newBusyState = (System.Boolean)args[i++];
        
            client.SendCommand(command, target, entityId);
        }
        
        private void ReceiveLocalCommand_Campchair_91ccee2338d92624a8021fda1c91e47c_91ccee2338d92624a8021fda1c91e47c_da4067b1_fcd3_4e8a_93ae_914a3b0df2f9(MessageTarget target, object[] args)
        {
            var command = new Campchair_91ccee2338d92624a8021fda1c91e47c_91ccee2338d92624a8021fda1c91e47c_da4067b1_fcd3_4e8a_93ae_914a3b0df2f9();
            
            int i = 0;
            command.newBusyState = (System.Boolean)args[i++];
            
            ReceiveCommand_Campchair_91ccee2338d92624a8021fda1c91e47c_91ccee2338d92624a8021fda1c91e47c_da4067b1_fcd3_4e8a_93ae_914a3b0df2f9(command);
        }

        private void ReceiveCommand_Campchair_91ccee2338d92624a8021fda1c91e47c_91ccee2338d92624a8021fda1c91e47c_da4067b1_fcd3_4e8a_93ae_914a3b0df2f9(Campchair_91ccee2338d92624a8021fda1c91e47c_91ccee2338d92624a8021fda1c91e47c_da4067b1_fcd3_4e8a_93ae_914a3b0df2f9 command)
        {
            var target = Campchair_91ccee2338d92624a8021fda1c91e47c_91ccee2338d92624a8021fda1c91e47c_da4067b1_fcd3_4e8a_93ae_914a3b0df2f9_CommandTarget;
            
            target.ChangeState((System.Boolean)(command.newBusyState));
        }
        
        public override void ReceiveCommand(IEntityCommand command)
        {
            switch (command)
            {
                case Campchair_91ccee2338d92624a8021fda1c91e47c_91ccee2338d92624a8021fda1c91e47c_da4067b1_fcd3_4e8a_93ae_914a3b0df2f9 castedCommand:
                    ReceiveCommand_Campchair_91ccee2338d92624a8021fda1c91e47c_91ccee2338d92624a8021fda1c91e47c_da4067b1_fcd3_4e8a_93ae_914a3b0df2f9(castedCommand);
                    break;
                default:
                    logger.Warning($"CoherenceSyncCampchair_91ccee2338d92624a8021fda1c91e47c Unhandled command: {command.GetType()}.");
                    break;
            }
        }
        
        public override List<ICoherenceComponentData> CreateEntity(bool usesLodsAtRuntime, string archetypeName)
        {
            if (!usesLodsAtRuntime)
            {
                return null;
            }
            
            if (Archetypes.IndexForName.TryGetValue(archetypeName, out int archetypeIndex))
            {
                var components = new List<ICoherenceComponentData>()
                {
                    new ArchetypeComponent
                    {
                        index = archetypeIndex
                    }
                };

                return components;
            }
    
            logger.Warning($"Unable to find archetype {archetypeName} in dictionary. Please, bake manually (coherence > Bake)");
            
            return null;
        }
        
        public override void Dispose()
        {
        }
        
        public override void Initialize(Entity entityId, CoherenceBridge bridge, IClient client, CoherenceInput input, Logger logger)
        {
            this.logger = logger.With<CoherenceSyncCampchair_91ccee2338d92624a8021fda1c91e47c>();
            this.bridge = bridge;
            this.entityId = entityId;
            this.client = client;        
        }
    }

}