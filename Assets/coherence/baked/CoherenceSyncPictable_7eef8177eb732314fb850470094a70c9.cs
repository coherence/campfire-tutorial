// Copyright (c) coherence ApS.
// For all coherence generated code, the coherence SDK license terms apply. See the license file in the coherence Package root folder for more information.

// <auto-generated>
// Generated file. DO NOT EDIT!
// </auto-generated>
namespace Coherence.Generated
{
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using UnityEngine;
    using Coherence.Toolkit;
    using Coherence.Toolkit.Bindings;
    using Coherence.Entities;
    using Coherence.ProtocolDef;
    using Coherence.Brook;
    using Coherence.Toolkit.Bindings.ValueBindings;
    using Coherence.Toolkit.Bindings.TransformBindings;
    using Coherence.Connection;
    using Coherence.Log;
    using Logger = Coherence.Log.Logger;
    using UnityEngine.Scripting;
    
    public class Binding_7eef8177eb732314fb850470094a70c9_3c6dd2a1_004a_48f9_8828_46782165be86 : PositionBinding
    {   
        private global::UnityEngine.Transform CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Transform)UnityComponent;
        }

        public override string CoherenceComponentName => "WorldPosition";
        public override uint FieldMask => 0b00000000000000000000000000000001;

        public override UnityEngine.Vector3 Value
        {
            get { return (UnityEngine.Vector3)(coherenceSync.coherencePosition); }
            set { coherenceSync.coherencePosition = (UnityEngine.Vector3)(value); }
        }

        protected override UnityEngine.Vector3 ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((WorldPosition)coherenceComponent).value;
            if (!coherenceSync.HasParentWithCoherenceSync) { value += floatingOriginDelta; }
            
            return value;
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, double time)
        {
            var update = (WorldPosition)coherenceComponent;
            if (RuntimeInterpolationSettings.IsInterpolationNone)
            {
                update.value = Value;
            }
            else
            {
                update.value = GetInterpolatedAt(time);
            }
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new WorldPosition();
        }    
    }
    
    public class Binding_7eef8177eb732314fb850470094a70c9_8f5fdae3_bab7_4f30_9565_b69548451c75 : BoolBinding
    {   
        private global::Chair CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::Chair)UnityComponent;
        }

        public override string CoherenceComponentName => "Pictable_7eef8177eb732314fb850470094a70c9_Chair_468635232";
        public override uint FieldMask => 0b00000000000000000000000000000001;

        public override System.Boolean Value
        {
            get { return (System.Boolean)(CastedUnityComponent.isBusy); }
            set { CastedUnityComponent.isBusy = (System.Boolean)(value); }
        }

        protected override System.Boolean ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((Pictable_7eef8177eb732314fb850470094a70c9_Chair_468635232)coherenceComponent).isBusy;
            
            return value;
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, double time)
        {
            var update = (Pictable_7eef8177eb732314fb850470094a70c9_Chair_468635232)coherenceComponent;
            if (RuntimeInterpolationSettings.IsInterpolationNone)
            {
                update.isBusy = Value;
            }
            else
            {
                update.isBusy = GetInterpolatedAt(time);
            }
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new Pictable_7eef8177eb732314fb850470094a70c9_Chair_468635232();
        }    
    }
    
    public class Binding_7eef8177eb732314fb850470094a70c9_96deafb2_67de_4576_b43f_8958e112ee4d : BoolBinding
    {   
        private global::UnityEngine.CapsuleCollider CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.CapsuleCollider)UnityComponent;
        }

        public override string CoherenceComponentName => "Pictable_7eef8177eb732314fb850470094a70c9_CapsuleCollider_468635231";
        public override uint FieldMask => 0b00000000000000000000000000000001;

        public override System.Boolean Value
        {
            get { return (System.Boolean)(CastedUnityComponent.enabled); }
            set { CastedUnityComponent.enabled = (System.Boolean)(value); }
        }

        protected override System.Boolean ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((Pictable_7eef8177eb732314fb850470094a70c9_CapsuleCollider_468635231)coherenceComponent).enabled;
            
            return value;
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, double time)
        {
            var update = (Pictable_7eef8177eb732314fb850470094a70c9_CapsuleCollider_468635231)coherenceComponent;
            if (RuntimeInterpolationSettings.IsInterpolationNone)
            {
                update.enabled = Value;
            }
            else
            {
                update.enabled = GetInterpolatedAt(time);
            }
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new Pictable_7eef8177eb732314fb850470094a70c9_CapsuleCollider_468635231();
        }    
    }

    public class CoherenceSyncPictable_7eef8177eb732314fb850470094a70c9 : CoherenceSyncBaked
    {
        private Entity entityId;
        private Logger logger = Coherence.Log.Log.GetLogger<CoherenceSyncPictable_7eef8177eb732314fb850470094a70c9>();
        
        private global::Chair Pictable_7eef8177eb732314fb850470094a70c9_7eef8177eb732314fb850470094a70c9_510b1c05_cf02_49e6_8fbc_ff362acff187_CommandTarget;
        
        
        private IClient client;
        private CoherenceBridge bridge;
        
        private readonly Dictionary<string, Binding> bakedValueBindings = new Dictionary<string, Binding>()
        {
            ["3c6dd2a1-004a-48f9-8828-46782165be86"] = new Binding_7eef8177eb732314fb850470094a70c9_3c6dd2a1_004a_48f9_8828_46782165be86(),
            ["8f5fdae3-bab7-4f30-9565-b69548451c75"] = new Binding_7eef8177eb732314fb850470094a70c9_8f5fdae3_bab7_4f30_9565_b69548451c75(),
            ["96deafb2-67de-4576-b43f-8958e112ee4d"] = new Binding_7eef8177eb732314fb850470094a70c9_96deafb2_67de_4576_b43f_8958e112ee4d(),
        };
        
        private Dictionary<string, Action<CommandBinding, CommandsHandler>> bakedCommandBindings = new Dictionary<string, Action<CommandBinding, CommandsHandler>>();
        
        public CoherenceSyncPictable_7eef8177eb732314fb850470094a70c9()
        {
            bakedCommandBindings.Add("510b1c05-cf02-49e6-8fbc-ff362acff187", BakeCommandBinding_Pictable_7eef8177eb732314fb850470094a70c9_7eef8177eb732314fb850470094a70c9_510b1c05_cf02_49e6_8fbc_ff362acff187);
        }
        
        public override Binding BakeValueBinding(Binding valueBinding)
        {
            if (bakedValueBindings.TryGetValue(valueBinding.guid, out var bakedBinding))
            {
                valueBinding.CloneTo(bakedBinding);
                return bakedBinding;
            }
            
            return null;
        }
        
        public override void BakeCommandBinding(CommandBinding commandBinding, CommandsHandler commandsHandler)
        {
            if (bakedCommandBindings.TryGetValue(commandBinding.guid, out var commandBindingBaker))
            {
                commandBindingBaker.Invoke(commandBinding, commandsHandler);
            }
        }
    
        private void BakeCommandBinding_Pictable_7eef8177eb732314fb850470094a70c9_7eef8177eb732314fb850470094a70c9_510b1c05_cf02_49e6_8fbc_ff362acff187(CommandBinding commandBinding, CommandsHandler commandsHandler)
        {
            Pictable_7eef8177eb732314fb850470094a70c9_7eef8177eb732314fb850470094a70c9_510b1c05_cf02_49e6_8fbc_ff362acff187_CommandTarget = (global::Chair)commandBinding.UnityComponent;
            commandsHandler.AddBakedCommand("Chair.ChangeState", "(System.Boolean)", SendCommand_Pictable_7eef8177eb732314fb850470094a70c9_7eef8177eb732314fb850470094a70c9_510b1c05_cf02_49e6_8fbc_ff362acff187, ReceiveLocalCommand_Pictable_7eef8177eb732314fb850470094a70c9_7eef8177eb732314fb850470094a70c9_510b1c05_cf02_49e6_8fbc_ff362acff187, MessageTarget.AuthorityOnly, Pictable_7eef8177eb732314fb850470094a70c9_7eef8177eb732314fb850470094a70c9_510b1c05_cf02_49e6_8fbc_ff362acff187_CommandTarget, false);
        }
        
        private void SendCommand_Pictable_7eef8177eb732314fb850470094a70c9_7eef8177eb732314fb850470094a70c9_510b1c05_cf02_49e6_8fbc_ff362acff187(MessageTarget target, object[] args)
        {
            var command = new Pictable_7eef8177eb732314fb850470094a70c9_7eef8177eb732314fb850470094a70c9_510b1c05_cf02_49e6_8fbc_ff362acff187();
            
            int i = 0;
            command.newBusyState = (System.Boolean)args[i++];
        
            client.SendCommand(command, target, entityId);
        }
        
        private void ReceiveLocalCommand_Pictable_7eef8177eb732314fb850470094a70c9_7eef8177eb732314fb850470094a70c9_510b1c05_cf02_49e6_8fbc_ff362acff187(MessageTarget target, object[] args)
        {
            var command = new Pictable_7eef8177eb732314fb850470094a70c9_7eef8177eb732314fb850470094a70c9_510b1c05_cf02_49e6_8fbc_ff362acff187();
            
            int i = 0;
            command.newBusyState = (System.Boolean)args[i++];
            
            ReceiveCommand_Pictable_7eef8177eb732314fb850470094a70c9_7eef8177eb732314fb850470094a70c9_510b1c05_cf02_49e6_8fbc_ff362acff187(command);
        }

        private void ReceiveCommand_Pictable_7eef8177eb732314fb850470094a70c9_7eef8177eb732314fb850470094a70c9_510b1c05_cf02_49e6_8fbc_ff362acff187(Pictable_7eef8177eb732314fb850470094a70c9_7eef8177eb732314fb850470094a70c9_510b1c05_cf02_49e6_8fbc_ff362acff187 command)
        {
            var target = Pictable_7eef8177eb732314fb850470094a70c9_7eef8177eb732314fb850470094a70c9_510b1c05_cf02_49e6_8fbc_ff362acff187_CommandTarget;
            
            target.ChangeState((System.Boolean)(command.newBusyState));
        }
        
        public override void ReceiveCommand(IEntityCommand command)
        {
            switch (command)
            {
                case Pictable_7eef8177eb732314fb850470094a70c9_7eef8177eb732314fb850470094a70c9_510b1c05_cf02_49e6_8fbc_ff362acff187 castedCommand:
                    ReceiveCommand_Pictable_7eef8177eb732314fb850470094a70c9_7eef8177eb732314fb850470094a70c9_510b1c05_cf02_49e6_8fbc_ff362acff187(castedCommand);
                    break;
                default:
                    logger.Warning($"CoherenceSyncPictable_7eef8177eb732314fb850470094a70c9 Unhandled command: {command.GetType()}.");
                    break;
            }
        }
        
        public override List<ICoherenceComponentData> CreateEntity(bool usesLodsAtRuntime, string archetypeName)
        {
            if (!usesLodsAtRuntime)
            {
                return null;
            }
            
            if (Archetypes.IndexForName.TryGetValue(archetypeName, out int archetypeIndex))
            {
                var components = new List<ICoherenceComponentData>()
                {
                    new ArchetypeComponent
                    {
                        index = archetypeIndex
                    }
                };

                return components;
            }
    
            logger.Warning($"Unable to find archetype {archetypeName} in dictionary. Please, bake manually (coherence > Bake)");
            
            return null;
        }
        
        public override void Dispose()
        {
        }
        
        public override void Initialize(Entity entityId, CoherenceBridge bridge, IClient client, CoherenceInput input, Logger logger)
        {
            this.logger = logger.With<CoherenceSyncPictable_7eef8177eb732314fb850470094a70c9>();
            this.bridge = bridge;
            this.entityId = entityId;
            this.client = client;        
        }
    }

}